com.paidy.cluster-system = "FraudCheckerCluster"

akka {
  loglevel = "INFO"

  log-dead-letters = off

  actor {
    provider = cluster
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://FraudCheckerCluster@127.0.0.1:2551",
      "akka.tcp://FraudCheckerCluster@127.0.0.1:2552"
    ]
  }
}

clustering {

  ip = "127.0.0.1"
  ip = ${?THIS_IP}

  port = 0
  port = ${?AKKA_SAMPLE_THIS_PORT}

  seed-ip-1 = "127.0.0.1"
  seed-ip-1 = ${?AKKA_SAMPLE_SEED_IP_1}

  seed-port-1 = 2551
  seed-port-1 = ${?AKKA_SAMPLE_SEED_PORT_1}

  seed-ip-2 = "127.0.0.1"
  seed-ip-2 = ${?AKKA_SAMPLE_SEED_IP_2}

  seed-port-2 = 2552
  seed-port-2 = ${?AKKA_SAMPLE_SEED_PORT_2}

  name = FraudCheckerCluster
}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serialize-creators = on
    serialize-messages = on
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?THIS_IP}  //In Kubernetes, this is env var represents Pod's IP as in deployment.yaml
      port = 0
      port = ${?cluster-port} //In Kubernetes, this is specified as the contaienr port
    }
  }

  //In Kubenetes, to be overwritten by scala code in NetworkConfig object
  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.name}"@"${clustering.seed-ip-1}":"${clustering.seed-port-1},
      "akka.tcp://"${clustering.name}"@"${clustering.seed-ip-2}":"${clustering.seed-port-2}]
    auto-down-unreachable-after = 10s
  }

  persistence {
    publish-plugin-commands = on

    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb.dir = "target/journal-dir"
    }

    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots-dir/"
    }
  }

}
